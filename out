Listening for transport dt_socket at address: 8000


 /$$$$$$$$ /$$$$$$$  /$$$$$$$$ /$$$$$$$$ /$$$$$$$$$\
|__  $$__/| $$__  $$| $$_____/| $$_____/|_____  $$ *\
   | $$   | $$  \ $$| $$      | $$           / $/ \ *\
   | $$   | $$$$$$$/| $$$$$   | $$$$$       / $/   \ *\
   | $$   | $$__  $$| $$__/   | $$__/      / $/     \ *\
   | $$   | $$  \ $$| $$      | $$        / $/       \ *\
   | $$   | $$  | $$| $$$$$$$$| $$$$$$$$ / $$$$$$$$******\
   |__/   |__/  |__/|________/|________/|______  ** _____/
   ___ _   _    _ __  _  _ ___  __   __ __ __  | **|
    |  |\ | \  / |__  |\ |  |  /  \ |__) \ /   |___|
   _|_ | \|  \/  |___ | \|  |  \__/ |  \  |





2021-02-10T17:34:43.462+0000 |[main]| INFO | io.treez.inventory.application.InventoryServiceApplication | Starting InventoryServiceApplication v1.0 on andy-laptop with PID 1 (/app.jar started by root in /)
2021-02-10T17:34:43.467+0000 |[main]| INFO | io.treez.inventory.application.InventoryServiceApplication | No active profile set, falling back to default profiles: default
2021-02-10T17:34:43.552+0000 |[main]| INFO | org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext | Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b765a2c: startup date [Wed Feb 10 17:34:43 GMT 2021]; root of context hierarchy
2021-02-10T17:34:46.761+0000 |[main]| INFO | org.springframework.beans.factory.support.DefaultListableBeanFactory | Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2021-02-10T17:34:47.416+0000 |[main]| INFO | org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor | JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2021-02-10T17:34:47.685+0000 |[main]| INFO | org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping | Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-02-10T17:34:48.333+0000 |[main]| INFO | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat initialized with port(s): 7777 (http)
2021-02-10T17:34:48.367+0000 |[main]| INFO | org.apache.coyote.http11.Http11NioProtocol | Initializing ProtocolHandler ["http-nio-7777"]
2021-02-10T17:34:48.417+0000 |[main]| INFO | org.apache.catalina.core.StandardService | Starting service [Tomcat]
2021-02-10T17:34:48.418+0000 |[main]| INFO | org.apache.catalina.core.StandardEngine | Starting Servlet Engine: Apache Tomcat/8.5.29
2021-02-10T17:34:48.432+0000 |[localhost-startStop-1]| INFO | org.apache.catalina.core.AprLifecycleListener | The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server:/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64:/usr/lib/jvm/java-1.8-openjdk/jre/../lib/amd64:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib]
2021-02-10T17:34:48.589+0000 |[localhost-startStop-1]| INFO | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InventoryService] | Initializing Spring embedded WebApplicationContext
2021-02-10T17:34:48.607+0000 |[localhost-startStop-1]| INFO | io.treez.inventory.application.InventoryServiceApplication | init called
2021-02-10T17:34:49.250+0000 |[localhost-startStop-1]| INFO | com.zaxxer.hikari.HikariDataSource | HikariPool-1 - Starting...
2021-02-10T17:34:49.571+0000 |[localhost-startStop-1]| INFO | com.zaxxer.hikari.HikariDataSource | HikariPool-1 - Start completed.
2021-02-10T17:34:49.731+0000 |[localhost-startStop-1]| INFO | liquibase | Successfully acquired change log lock
2021-02-10T17:34:51.375+0000 |[localhost-startStop-1]| INFO | liquibase | Reading from inventory.DATABASECHANGELOG
2021-02-10T17:34:51.668+0000 |[localhost-startStop-1]| INFO | liquibase | Successfully released change log lock
2021-02-10T17:34:51.907+0000 |[localhost-startStop-1]| INFO | org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean | Building JPA container EntityManagerFactory for persistence unit 'default'
2021-02-10T17:34:56.067+0000 |[localhost-startStop-1]| INFO | org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean | Initialized JPA EntityManagerFactory for persistence unit 'default'
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where (tzconfigur0_.code in (? , ?)) and tzconfigur0_.current_flag=?
Hibernate: select tztenant0_.id as id1_87_, tztenant0_.current_flag as current_2_87_, tztenant0_.external_int_id as external3_87_, tztenant0_.last_user_id as last_use4_87_, tztenant0_.name as name5_87_, tztenant0_.original_start_date as original6_87_, tztenant0_.prev_id as prev_id7_87_, tztenant0_.start_date as start_da8_87_, tztenant0_.version as version9_87_ from tz_tenant tztenant0_ where tztenant0_.current_flag=?
2021-02-10T17:35:00.807+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'characterEncodingFilter' to: [/*]
2021-02-10T17:35:00.808+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean | Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-02-10T17:35:00.808+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'httpTraceFilter' to: [/*]
2021-02-10T17:35:00.808+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'webMvcMetricsFilter' to: [/*]
2021-02-10T17:35:00.808+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.FilterRegistrationBean | Mapping filter: 'JWTAuthenticationFilter' to: [/*]
2021-02-10T17:35:00.808+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet loggableDispatcherServlet mapped to []
2021-02-10T17:35:00.809+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet dispatcherServlet mapped to [/]
2021-02-10T17:35:00.810+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet messageDispatcherServlet mapped to [/services/*]
2021-02-10T17:35:00.810+0000 |[localhost-startStop-1]| INFO | org.springframework.boot.web.servlet.ServletRegistrationBean | Servlet productMetadataController mapped to [/]
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
2021-02-10T17:35:01.011+0000 |[main]| INFO | io.treez.queue.pulsar.PulsarConsumer | Checking PulsarConfiguration for updates
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where (tzconfigur0_.code in (? , ? , ?)) and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:35:03.316+0000 |[main]| WARN | org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration | spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-10T17:35:03.914+0000 |[main]| INFO | org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration | 

Using generated security password: dd169092-3ce8-443f-a624-0383d6d5bd91

2021-02-10T17:35:04.131+0000 |[main]| INFO | org.springframework.security.web.DefaultSecurityFilterChain | Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1320e68a, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a083b96, org.springframework.security.web.header.HeaderWriterFilter@11d4d979, org.springframework.security.web.authentication.logout.LogoutFilter@226de93c, io.treez.inventory.security.JWTAuthenticationFilter@d6823b1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c604965, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@88b76f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b033eac, org.springframework.security.web.session.SessionManagementFilter@db99785, org.springframework.security.web.access.ExceptionTranslationFilter@531ec978, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49edcb30]
2021-02-10T17:35:05.048+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter | Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b765a2c: startup date [Wed Feb 10 17:34:43 GMT 2021]; root of context hierarchy
2021-02-10T17:35:05.065+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2021-02-10T17:35:05.066+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2021-02-10T17:35:05.066+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2021-02-10T17:35:05.066+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2021-02-10T17:35:05.066+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2021-02-10T17:35:05.067+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2021-02-10T17:35:05.067+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2021-02-10T17:35:05.068+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2021-02-10T17:35:05.068+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2021-02-10T17:35:05.068+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2021-02-10T17:35:05.068+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2021-02-10T17:35:05.069+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2021-02-10T17:35:05.069+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2021-02-10T17:35:05.069+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2021-02-10T17:35:05.070+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2021-02-10T17:35:05.070+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2021-02-10T17:35:05.071+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.071+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.071+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2021-02-10T17:35:05.071+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.072+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.072+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.072+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2021-02-10T17:35:05.072+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.072+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2021-02-10T17:35:05.073+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.073+0000 |[main]| INFO | org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping | Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2021-02-10T17:35:05.077+0000 |[main]| INFO | org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping | Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2021-02-10T17:35:05.078+0000 |[main]| INFO | org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping | Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2021-02-10T17:35:05.078+0000 |[main]| INFO | org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping | Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2021-02-10T17:35:05.078+0000 |[main]| INFO | org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping | Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2021-02-10T17:35:05.079+0000 |[main]| INFO | org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping | Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2021-02-10T17:35:05.301+0000 |[main]| INFO | org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver | Exposing 1 endpoint(s) beneath base path '/actuator'
2021-02-10T17:35:05.320+0000 |[main]| INFO | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2021-02-10T17:35:05.320+0000 |[main]| INFO | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2021-02-10T17:35:05.321+0000 |[main]| INFO | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2021-02-10T17:35:05.321+0000 |[main]| INFO | org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping | Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-02-10T17:35:05.395+0000 |[main]| INFO | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Registering beans for JMX exposure on startup
2021-02-10T17:35:05.397+0000 |[main]| INFO | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Bean with name 'dataSource' has been autodetected for JMX exposure
2021-02-10T17:35:05.405+0000 |[main]| INFO | org.springframework.jmx.export.annotation.AnnotationMBeanExporter | Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-02-10T17:35:05.415+0000 |[main]| INFO | org.apache.coyote.http11.Http11NioProtocol | Starting ProtocolHandler ["http-nio-7777"]
2021-02-10T17:35:05.422+0000 |[SimpleAsyncTaskExecutor-5]| INFO | org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor | No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-02-10T17:35:05.425+0000 |[main]| INFO | org.apache.tomcat.util.net.NioSelectorPool | Using a shared selector for servlet write/read
2021-02-10T17:35:05.455+0000 |[main]| INFO | org.springframework.boot.web.embedded.tomcat.TomcatWebServer | Tomcat started on port(s): 7777 (http) with context path '/InventoryService'
2021-02-10T17:35:05.459+0000 |[main]| INFO | io.treez.inventory.application.InventoryServiceApplication | Started InventoryServiceApplication in 28.198 seconds (JVM running for 29.497)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
2021-02-10T17:35:58.727+0000 |[http-nio-7777-exec-1]| INFO | org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/InventoryService] | Initializing Spring FrameworkServlet 'loggableDispatcherServlet'
2021-02-10T17:35:58.727+0000 |[http-nio-7777-exec-1]| INFO | io.treez.inventory.interceptor.LoggableDispatcherServlet | FrameworkServlet 'loggableDispatcherServlet': initialization started
2021-02-10T17:35:58.752+0000 |[http-nio-7777-exec-1]| INFO | io.treez.inventory.interceptor.LoggableDispatcherServlet | FrameworkServlet 'loggableDispatcherServlet': initialization completed in 25 ms
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:36:01.675+0000 |[http-nio-7777-exec-1]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:36:01.690+0000 |[http-nio-7777-exec-2]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:36:01.680+0000 |[http-nio-7777-exec-2]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:36:01.680+0000 |[http-nio-7777-exec-1]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:36:01.719+0000 |[http-nio-7777-exec-2]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:36:01.722+0000 |[http-nio-7777-exec-1]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:37:00.194+0000 |[http-nio-7777-exec-3]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:37:00.194+0000 |[http-nio-7777-exec-3]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:37:00.196+0000 |[http-nio-7777-exec-3]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:37:38.635+0000 |[http-nio-7777-exec-4]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:37:38.636+0000 |[http-nio-7777-exec-4]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:37:38.638+0000 |[http-nio-7777-exec-4]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:38:00.225+0000 |[http-nio-7777-exec-5]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:38:00.225+0000 |[http-nio-7777-exec-5]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:38:00.227+0000 |[http-nio-7777-exec-5]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:39:00.193+0000 |[http-nio-7777-exec-6]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:39:00.194+0000 |[http-nio-7777-exec-6]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:39:00.201+0000 |[http-nio-7777-exec-6]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:39:18.424+0000 |[http-nio-7777-exec-7]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:39:18.425+0000 |[http-nio-7777-exec-7]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:39:18.431+0000 |[http-nio-7777-exec-7]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tztenant0_.id as id1_87_, tztenant0_.current_flag as current_2_87_, tztenant0_.external_int_id as external3_87_, tztenant0_.last_user_id as last_use4_87_, tztenant0_.name as name5_87_, tztenant0_.original_start_date as original6_87_, tztenant0_.prev_id as prev_id7_87_, tztenant0_.start_date as start_da8_87_, tztenant0_.version as version9_87_ from tz_tenant tztenant0_ where tztenant0_.current_flag=?
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
2021-02-10T17:40:00.043+0000 |[pool-5-thread-1]| INFO | io.treez.queue.pulsar.PulsarConsumer | Checking PulsarConfiguration for updates
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where (tzconfigur0_.code in (? , ? , ?)) and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
Hibernate: select tzconfigur0_.id as id1_12_, tzconfigur0_.category as category2_12_, tzconfigur0_.code as code3_12_, tzconfigur0_.current_flag as current_4_12_, tzconfigur0_.description as descript5_12_, tzconfigur0_.last_user_id as last_use6_12_, tzconfigur0_.original_start_date as original7_12_, tzconfigur0_.prev_id as prev_id8_12_, tzconfigur0_.start_date as start_da9_12_, tzconfigur0_.tenant_id as tenant_10_12_, tzconfigur0_.value as value11_12_, tzconfigur0_.version as version12_12_ from tz_configuration tzconfigur0_ where tzconfigur0_.code=? and tzconfigur0_.tenant_id=? and tzconfigur0_.current_flag=?
2021-02-10T17:40:00.256+0000 |[http-nio-7777-exec-8]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error searching PriceTier. 404
2021-02-10T17:40:00.257+0000 |[http-nio-7777-exec-8]| ERROR | io.treez.inventory.service.price.PriceTierProductAPIAdapter | Error parsing ErrorResponse response, <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /pricetier/search</pre>
</body>
</html>

com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) [classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) [classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) [classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
2021-02-10T17:40:00.264+0000 |[http-nio-7777-exec-8]| ERROR | io.treez.inventory.interceptor.LoggableDispatcherServlet | Uncaught Exception: 
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:224) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:888) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:853) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.Gson.fromJson(Gson.java:802) ~[gson-2.8.2.jar!/:?]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.handleParsingErrorResponse(PriceTierProductAPIAdapter.java:369) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierProductAPIAdapter.searchPriceTiers(PriceTierProductAPIAdapter.java:190) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersByTenantId(PriceTierService.java:148) ~[classes!/:1.0]
	at io.treez.inventory.service.price.PriceTierService.getAllTiersWithThresholds(PriceTierService.java:163) ~[classes!/:1.0]
	at io.treez.inventory.controller.PriceTierController.getAllTiersWithThresholds(PriceTierController.java:41) ~[classes!/:1.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_212]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_212]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_212]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_212]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at io.treez.inventory.interceptor.LoggableDispatcherServlet.doDispatch(LoggableDispatcherServlet.java:94) [classes!/:1.0]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84) [spring-boot-actuator-2.0.1.RELEASE.jar!/:2.0.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at io.treez.inventory.security.JWTAuthenticationFilter.doFilter(JWTAuthenticationFilter.java:55) [classes!/:1.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.18.RELEASE.jar!/:5.0.18.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.5.RELEASE.jar!/:5.0.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_212]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_212]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.29.jar!/:8.5.29]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_212]
Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginObject(JsonReader.java:385) ~[gson-2.8.2.jar!/:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:213) ~[gson-2.8.2.jar!/:?]
	... 96 more
Hibernate: select tzapilog0_.id as id1_4_0_, tzapilog0_.client_ip as client_i2_4_0_, tzapilog0_.java_method as java_met3_4_0_, tzapilog0_.request_body as request_4_4_0_, tzapilog0_.request_headers as request_5_4_0_, tzapilog0_.request_method as request_6_4_0_, tzapilog0_.response_code as response7_4_0_, tzapilog0_.response_payload as response8_4_0_, tzapilog0_.start_date as start_da9_4_0_, tzapilog0_.tenant_id as tenant_10_4_0_, tzapilog0_.url as url11_4_0_, tzapilog0_.user_id as user_id12_4_0_ from tz_api_log tzapilog0_ where tzapilog0_.id=?
Hibernate: insert into tz_api_log (client_ip, java_method, request_body, request_headers, request_method, response_code, response_payload, start_date, tenant_id, url, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
Hibernate: select tzmessage0_.id as id1_53_, tzmessage0_.error_response as error_re2_53_, tzmessage0_.message as message3_53_, tzmessage0_.original_start_date as original4_53_, tzmessage0_.tenant_id as tenant_i5_53_, tzmessage0_.type as type6_53_ from tz_message tzmessage0_ where tzmessage0_.type=? order by tzmessage0_.original_start_date asc
